{"version":3,"sources":["Table.jsx","HighScores.jsx","App.js","index.js"],"names":["Table","props","numberOfColumns","data","length","initValue","i","push","tableJSX","reduce","previousValue","currentDataRow","Error","forEach","item","index","className","map","column","style","justifyContent","display","flexDirection","HighScores","useState","highscores","setHighScores","url","undefined","useEffect","fetch","then","response","json","tableBody","nickname","score","App","width","ReactDOM","render","document","getElementById"],"mappings":"+KAGO,SAASA,EAAMC,GAKlB,IAHA,IAAMC,EAAiBD,EAAME,KAAK,GAAGC,OAE/BC,EAAY,GACVC,EAAI,EAAGA,EAAIJ,IAAmBI,EAClCD,EAAUE,KAAK,IAGnB,IAYMC,EAZYP,EAAME,KAAKM,QAAO,SAACC,EAAeC,GAChD,GAAGA,EAAeP,SAAWF,EACzB,MAAM,IAAIU,MAAM,6CAOpB,OAJAD,EAAeE,SAAQ,SAACC,EAAMC,GAC1BL,EAAcK,GAAOR,KAAK,yBAAKS,UAAU,aAAaF,OAGnDJ,IACRL,GAEyBY,KAAI,SAACC,GAC7B,OAAO,yBAAKF,UAAU,aAAaE,MAGvC,OACI,yBAAKC,MAAO,CAACC,eAAgB,SAAUC,QAAQ,OAAQC,cAAe,QACjEd,G,wBCzBN,SAASe,EAAWtB,GAC1B,IAAD,EACwCuB,mBAAS,MADjD,mBACWC,EADX,KACuBC,EADvB,KAGUC,EAAqB,OAAd1B,EAAM0B,UAA8BC,IAAd3B,EAAM0B,IAAqB1B,EAAM0B,IAAM,mCAgB1E,OAfAE,qBAAU,WACNC,MAAMH,GACDI,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAC,GACF,IACME,EAAYF,EAASf,KAAI,SAACH,GAC5B,MAAO,CAACA,EAAKqB,SAAUrB,EAAKsB,UAGhCV,EAAc,CALE,CAAC,WAAY,UAKhB,mBAAcQ,UAEpC,CAACP,IAEc,OAAfF,EAEQ,0CAIA,kBAACzB,EAAD,CAAOG,KAAMsB,IChBbY,MAXf,WACE,OACI,yBAAKlB,MAAO,CAACmB,MAAO,QAASjB,QAAS,OAAQD,eAAgB,SAAUE,cAAe,QACnF,yBAAKH,MAAO,CAACmB,MAAO,SAChB,kBAACf,EAAD,SCJdgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fd7d644c.chunk.js","sourcesContent":["import React from 'react';\nimport './table.css';\n\nexport function Table(props)\n{\n    const numberOfColumns= props.data[0].length;\n\n    const initValue = [];\n    for(let i = 0; i < numberOfColumns; ++i) {\n        initValue.push([]) ;\n    }\n\n    const columnsJSX= props.data.reduce((previousValue, currentDataRow) =>{\n        if(currentDataRow.length !== numberOfColumns){\n            throw new Error('All rows must have same number of columns')\n        }\n\n        currentDataRow.forEach((item, index)=>{\n            previousValue[index].push(<div className='table-row'>{item}</div>)\n        });\n\n        return previousValue;\n    }, initValue);\n\n    const tableJSX = columnsJSX.map((column)=> {\n        return <div className='table-col'>{column}</div>\n    });\n\n    return (\n        <div style={{justifyContent: 'center', display:'flex', flexDirection: 'row'}}>\n            {tableJSX}\n        </div>\n    )\n}\n\n","import React, {useEffect, useState} from 'react';\nimport {isElementOfType} from \"react-dom/test-utils\";\nimport {Table} from \"./Table\";\n\n\nexport function HighScores(props)\n{\n    const [highscores, setHighScores] = useState(null);\n\n    const url = (props.url !== null && props.url !== undefined) ? props.url : 'http://localhost:3000/highScores';\n    useEffect(()=> {\n        fetch(url)\n            .then(response=>{\n                return response.json();\n            })\n            .then(response => {\n                const headers = ['Nickname', 'Score'];\n                const tableBody = response.map((item)=>{\n                    return [item.nickname, item.score];\n                });\n\n                setHighScores([headers, ...tableBody]);\n            })\n    }, [url]);\n\n    if(highscores === null)\n    {\n        return <h1>Loading...</h1>;\n    }\n    else\n    {\n        return <Table data={highscores}/>\n    }\n\n\n    return <h1>Test</h1>\n}","import React from 'react';\nimport {Table} from \"./Table\";\nimport {HighScores} from \"./HighScores\";\n\nfunction App() {\n  return (\n      <div style={{width: '100vw', display: 'flex', justifyContent: 'center', flexDirection: 'row'}}>\n          <div style={{width: '50vw'}}>\n              <HighScores/>\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}